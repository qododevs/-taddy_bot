import asyncio
import logging
from aiogram import Bot, Dispatcher
from handlers import router
from database import init_db, ensure_at_least_one_api_key
from utils import reload_api_keys, api_keys_cache  # ‚Üê –î–û–ë–ê–í–¨ –ò–ú–ü–û–†–¢
from dotenv import load_dotenv
from character_handlers import router as character_router
from admin_handlers import router as admin_router
from notifier import init_notifier
import os

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")

async def main():
    await init_db()

    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∫–ª—é—á, –µ—Å–ª–∏ –ë–î –ø—É—Å—Ç–∞
    default_api_key = os.getenv("DEFAULT_API_KEY")
    if default_api_key:
        await ensure_at_least_one_api_key(default_api_key)
    else:
        print("[WARN] DEFAULT_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ .env ‚Äî –¥–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á —á–µ—Ä–µ–∑ /addkey")

    # üëá –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á–∏ –≤ –∫—ç—à –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞
    await reload_api_keys()
    print(f"[INFO] API-–∫–ª—é—á–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {len(api_keys_cache)} –∫–ª—é—á(–µ–π)")

    bot = Bot(token=BOT_TOKEN)
    init_notifier(bot)
    dp = Dispatcher()

    dp.include_router(character_router)
    dp.include_router(admin_router)
    dp.include_router(router)

    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())